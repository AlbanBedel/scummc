/* ScummC
 * Copyright (C) 2006  Alban Bedel
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

#include <scummVars6.s>
#include "common.sch"
#include "actors.sch"
#include "dialog.sch"
#include "inventoryitems.sch"
#include "officeroom.sch"


bit knowsCarol;

room Actors {

    // the costumes for our actors
    cost ensignZobCost = "zob.cost";
    cost commanderZifCost = "zif.cost";
    cost carolCost = "carol.cost";
    
    
    script setZifOnThePhone() {
        setCurrentActor(commanderZif);
        setActorStandFrame( 32 );
        setActorInitFrame( 32 );
        setActorTalkFrame( 36, 32 );
        setActorStanding();
        setCurrentActor(VAR_EGO);
    }

    
    script setZifOffThePhone() {
        setCurrentActor(commanderZif);
        setActorStandFrame( 3 );
        setActorInitFrame( 1 );
        setActorTalkFrame( 4, 5 );
        setActorStanding();
        setCurrentActor(VAR_EGO);
    }

    
    // set the actor costume, etc
    script setupActors() {
        dbgPrint("setupActors()");
        // create the actor
        setCurrentActor(ensignZob);
        initActor();
        setActorCostume(ensignZobCost);
        setActorTalkPos(-60,-70);
        setActorName("Ensign Zob");
        //setActorWalkSpeed(2,1);
        setActorWalkSpeed(2,1);
        setActorTalkColor(ZOB_COLOR);
        setActorWidth(20);
        setActorAnimSpeed(4);
        putActorAt(ensignZob,170,110,OfficeRoom);
        setActorDirection(270);


        // set VAR_EGO so we can use the *Ego* functions
        VAR_EGO = ensignZob;
        
        // initialize commanderZif
        setCurrentActor(commanderZif);
        initActor();
        setActorCostume(commanderZifCost);
        setActorTalkPos(-60,-80);
        setActorName("Commander Zif");
        setActorWalkSpeed(2,1);
        setActorTalkColor(ZIF_COLOR);
        setActorWidth(20);
        setActorAnimSpeed(3);
        actorObject[commanderZif] = OfficeRoom::commanderZifObj;
        putActorAt(commanderZif,200,120,OfficeRoom);
        setActorDirection(180);
        
        setCurrentActor(carol);
        initActor();
        setActorCostume(carolCost);
        setActorName("indigenous lifeform");
        setActorWidth(20);
        setActorIgnoreBoxes();
        setActorAnimSpeed( 7 );
        setActorTalkColor(CAROL_COLOR);
        actorObject[carol] = OfficeRoom::carolObj;

        pickupObject( InventoryItems::scanner, InventoryItems );
        invOffset = 0;
        setCurrentActor(VAR_EGO);

    }
    
    
    script officeIntro() {
    
        try {
        setCurrentActor(commanderZif);
        actorSay(commanderZif, "Hmmm");
        waitForMessage();
        Actors::setZifOnThePhone();
        animateActor( commanderZif, 40 );
        delay(30);
        actorSay(commanderZif, "Commander's log, star date 432.1");
        waitForMessage();
        actorSay(commanderZif, "Arrival complete on the planet of mostly water.");
        waitForMessage();
        Actors::setZifOffThePhone();

        setCurrentActor(carol);
        putActorAt(carol,76,98,OfficeRoom);
        delay(120);
        setActorStanding();
        actorSay(carol, "Are you done in here?");

        }
        override {
            if(VAR_OVERRIDE) {
            stopTalking();
            putActorAt(carol,76,98,OfficeRoom);
            setActorStanding();
            animateActor( carol, 3 );
            Actors::setZifOffThePhone();
            }
        }
    }

    
    script zobTalkToZif( bit hasPressedPlate, bit hasTalkedAboutPlate ) {
            char* sentence;

            cutscene(1) {
                actorFace( commanderZif, VAR_EGO );
                actorSay(commanderZif,"Yes, ensign?");
                waitForMessage();
            }
            dialogLoop: while(1) {
                sentence[0] = "What are your orders?";
                Dialog::dialogAdd(sentence);
                sentence = 0;
                sentence[0] = "I'll continue my search.";
                Dialog::dialogAdd(sentence);
                if( hasPressedPlate && ! hasTalkedAboutPlate ) {
                    sentence = 0;
                    sentence[0] = "I require your assistance with this opening mechanism.";
                    Dialog::dialogAdd(sentence);
                }

                Dialog::dialogStart(ZOB_DIM_COLOR,ZOB_COLOR);
                do breakScript() while(selectedSentence < 0);
                Dialog::dialogHide();
                cutscene() {
                    sentence = dialogList[selectedSentence];
                    egoSay("%s{sentence}");
                    waitForMessage();
                    switch(selectedSentence) {
                    case 0:
                        try {
                        actorSay(commanderZif,"Locate the stolen artifact.");
                        waitForMessage();
                        egoSay("Any ideas where?");
                        waitForMessage();
                        actorSay(commanderZif,"Study your surroundings.");
                        waitForMessage();
                        actorSay(commanderZif,"Use all the cunning and guile at your disposal.");
                        waitForMessage();
                        actorSay(commanderZif,"Should you do this, you shall surely be successful.");
                        waitForMessage();
                        egoSay("Guile, right, aye sir.");
                        waitForMessage();
                        actorSay(commanderZif,"Also get a gun with which to shoot things.");
                        waitForMessage();
                        }
                        override {
                            if(VAR_OVERRIDE) {
                                stopTalking();
                            }
                        }
                        break;
                    case 1:
                        actorSay(commanderZif,"Very good.");
                        break;
                    case 2:
                        actorSay(commanderZif,"Have you deciphered its secrets?");
                        waitForMessage();
                        egoSay("Yes, I believe two persons are required.");
                        waitForMessage();
                        actorSay(commanderZif,"In which case I shall follow you, ensign.");
                        hasTalkedAboutPlate = 1;
                        OfficeRoom::setTalkedAboutPlate();
                        break;
                    }
                    waitForMessage();
                }
                Dialog::dialogClear(1);
                if(selectedSentence == 1) break dialogLoop;
            }
            Dialog::dialogEnd();

    }
    
    
    script lookAtCarol() {
        if( ! knowsCarol ) {
            egoSay("A large carbon based mammal, it seems.");
            waitForMessage();
        }
        else {
            egoSay("It is Carol, one of the local lifeforms.");
            waitForMessage();
        }
    }


    script zobTalkToCarol( bit hasTriedToMovePlant, bit hasTalkedAboutPlant ) {
            char* sentence;

            cutscene(1) {
                if( ! knowsCarol ) {
                    egoSay("Speak, lifeform!");
                    waitForMessage();
                    egoSay("Is this translation matrix working?");
                    waitForMessage();
                    actorSay(carol, "You're that guy from accounts, right?");
                    waitForMessage();
                }
                else {
                    egoSay("Greetings, Carol.");
                    waitForMessage();
                    actorSay(carol, "You again?");
                    waitForMessage();
                }
            }
            dialogLoop: while(1) {
                sentence[0] = "What is your designation?";
                Dialog::dialogAdd(sentence);
                sentence = 0;
                sentence[0] = "What is located through that passageway?";
                Dialog::dialogAdd(sentence);
                sentence = 0;
                sentence[0] = "Stand aside, I need to pass!";
                Dialog::dialogAdd(sentence);
                sentence = 0;
                sentence[0] = "Look out behind you, a three-headed monkey!";
                Dialog::dialogAdd(sentence);
                sentence = 0;
                sentence[0] = "As you were";
                Dialog::dialogAdd(sentence);
                if( hasTriedToMovePlant && ! hasTalkedAboutPlant ) {
                    sentence = 0;
                    sentence[0] = "May I move this plant?";
                    Dialog::dialogAdd(sentence);
                }

                Dialog::dialogStart(ZOB_DIM_COLOR,ZOB_COLOR);
                do breakScript() while(selectedSentence < 0);
                Dialog::dialogHide();
                cutscene() {
                    sentence = dialogList[selectedSentence];
                    egoSay("%s{sentence}");
                    waitForMessage();
                    switch(selectedSentence) {
                    case 0:
                        actorSay(carol,"What you on about?");
                        waitForMessage();
                        egoSay("How are you addressed by a superior officer?");
                        waitForMessage();
                        actorSay(carol,"Carol");
                        waitForMessage();
                        egoSay("Greetings, Carol.");
                        waitForMessage();
                        setCurrentActor(carol);
                        setActorName("Carol");
                        knowsCarol = 1;
                        setCurrentActor(VAR_EGO);
                        break;
                    case 1:
                        actorSay(carol,"Err, reception, canteen...");
                        waitForMessage();
                        egoSay("Any stolen relics within those realms?");
                        waitForMessage();
                        actorSay(carol,"Do you mean that new tea maker they installed?");
                        waitForMessage();
                        egoSay("No.");
                        waitForMessage();
                        actorSay(carol,"Dunno then.");
                        waitForMessage();
                        break;
                    case 2:
                        actorSay(carol,"I just cleaned down there, you'll get the floor dirty.");
                        waitForMessage();
                        egoSay("In which case I shall remain here.");
                        waitForMessage();
                        break;
                    case 3:
                        actorSay(carol,"Yeah, that's Terry.");
                        waitForMessage();
                        actorSay(carol,"He works in HR.");
                        waitForMessage();
                        break;
                    case 4:
                        break;
                    case 5:
                        actorSay(carol,"I haven't cleaned down there yet.");
                        waitForMessage();
                        egoSay("Then by moving the plant I am providing assistance.");
                        waitForMessage();
                        actorSay(carol,"Oh yeah, go on then.");
                        waitForMessage();
                        hasTalkedAboutPlant = 1;
                        OfficeRoom::setTalkedAboutPlant();
                        break;
                    }
                    waitForMessage();
                }
                Dialog::dialogClear(1);
                if(selectedSentence == 4) break dialogLoop;
            }
            Dialog::dialogEnd();

    }

}